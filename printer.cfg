[include mainsail.cfg]

[include btt-octopus.cfg]

#[include ebb-can-2209.cfg]

[include ebb-usb-2209.cfg]

#[include ldo-sb-nitehawk.cfg]

[include nozzle_scrub.cfg]

[include homing.cfg]

[include KAMP_Settings.cfg]

[include helpful_macros.cfg]

# RaspberryPi Temperature
[temperature_sensor raspberry_pi]
sensor_type: temperature_host

# Include Stealth Burner Neopixel
[include stealthburner_leds.cfg]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[exclude_object]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2D003A000A5053424E363420-if00

[mcu scanner]
serial: /dev/serial/by-id/usb-Cartographer_614e_2F001500124330394D363620-if00

#[safe_z_home]
#home_xy_position: 125,125
#speed: 100
#z_hop: 10

[force_move]
enable_force_move: True

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    5, 5
    125, 225
    245, 5
##--------------------------------------------------------------------

speed: 100
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 20                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.01340
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 125, 125    
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 20, 20
#    start point of bed mesh [X, Y]
mesh_max: 230, 230
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105


#####################################################################
#   Macros
#####################################################################

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}

#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 2 min"               # Display info on display
    G4 P120000                                          # Wait 2 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  G28 Z                                                # Home Z again after Z_TILT_ADJUST

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  Line_Purge                                            # run purge line macroion

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 54.4
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 78.0
#*#
#*# [probe]
#*# z_offset = -0.195
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.491597, -0.488882, -0.477866, -0.464541, -0.447027, -0.449816, -0.440102, -0.435224, -0.421757, -0.403872, -0.381476, -0.358007, -0.347434, -0.327150, -0.311879, -0.303123, -0.296661, -0.277210, -0.272469, -0.253453, -0.236835, -0.225932, -0.211420, -0.194275, -0.179310, -0.169140, -0.155469, -0.145514, -0.141096, -0.135111
#*# 	  -0.489758, -0.479668, -0.464453, -0.452706, -0.445761, -0.436927, -0.423480, -0.415121, -0.398120, -0.382421, -0.355347, -0.351978, -0.329790, -0.313067, -0.308766, -0.290924, -0.274216, -0.274236, -0.254075, -0.233024, -0.225887, -0.207866, -0.195324, -0.180154, -0.165216, -0.159469, -0.135240, -0.129074, -0.130580, -0.112176
#*# 	  -0.462355, -0.469069, -0.436397, -0.434833, -0.441823, -0.413030, -0.396492, -0.405747, -0.380120, -0.364776, -0.342596, -0.327982, -0.308932, -0.296152, -0.285552, -0.271791, -0.256618, -0.247010, -0.234878, -0.213028, -0.204103, -0.187705, -0.167337, -0.157398, -0.150359, -0.129323, -0.116005, -0.111606, -0.101055, -0.089659
#*# 	  -0.449098, -0.437273, -0.431687, -0.413504, -0.399227, -0.393125, -0.389261, -0.369015, -0.353296, -0.349632, -0.322386, -0.298779, -0.295752, -0.278809, -0.257089, -0.255578, -0.242545, -0.221511, -0.203288, -0.194135, -0.168609, -0.159398, -0.152197, -0.132810, -0.116784, -0.109846, -0.098770, -0.079259, -0.076228, -0.075018
#*# 	  -0.421087, -0.404233, -0.406626, -0.398584, -0.380504, -0.364256, -0.365224, -0.347572, -0.331768, -0.321579, -0.303564, -0.280022, -0.270572, -0.255422, -0.240202, -0.225890, -0.215498, -0.197419, -0.182088, -0.169235, -0.153319, -0.129655, -0.119507, -0.111455, -0.091235, -0.085003, -0.072416, -0.057233, -0.050268, -0.047563
#*# 	  -0.399582, -0.390864, -0.380874, -0.373474, -0.365173, -0.340896, -0.336618, -0.330038, -0.308454, -0.296827, -0.278818, -0.264898, -0.244283, -0.229051, -0.221368, -0.201660, -0.182431, -0.176469, -0.152828, -0.136803, -0.128504, -0.101828, -0.094192, -0.086281, -0.065648, -0.059178, -0.047316, -0.028287, -0.024083, -0.016134
#*# 	  -0.376182, -0.363356, -0.368292, -0.349451, -0.331703, -0.327263, -0.312891, -0.301071, -0.289557, -0.275008, -0.252516, -0.235333, -0.219802, -0.206382, -0.193337, -0.177611, -0.163768, -0.146777, -0.128326, -0.117550, -0.093698, -0.076882, -0.070687, -0.052129, -0.044915, -0.035498, -0.013604, -0.004012, -0.001504, 0.014792
#*# 	  -0.354720, -0.348044, -0.341440, -0.328015, -0.316836, -0.301727, -0.292192, -0.283341, -0.278313, -0.254412, -0.228768, -0.218394, -0.191721, -0.180704, -0.173049, -0.146727, -0.133998, -0.123198, -0.104378, -0.087065, -0.067556, -0.054372, -0.043054, -0.026158, -0.021803, -0.008497, 0.015269, 0.026404, 0.029426, 0.043673
#*# 	  -0.338007, -0.335487, -0.316556, -0.309728, -0.295417, -0.278192, -0.269247, -0.262909, -0.248462, -0.232407, -0.209996, -0.191291, -0.171199, -0.151446, -0.143185, -0.124948, -0.105781, -0.096442, -0.076673, -0.061090, -0.042555, -0.027255, -0.016275, -0.004591, 0.010467, 0.026032, 0.042451, 0.053897, 0.062761, 0.072545
#*# 	  -0.310485, -0.315021, -0.307864, -0.287456, -0.278591, -0.265100, -0.245612, -0.241466, -0.233197, -0.207175, -0.193490, -0.167726, -0.148016, -0.135315, -0.121174, -0.099933, -0.084112, -0.074378, -0.054495, -0.036477, -0.018733, 0.000378, 0.009857, 0.021735, 0.036225, 0.050827, 0.067786, 0.080398, 0.091878, 0.092313
#*# 	  -0.301083, -0.284831, -0.286651, -0.275699, -0.255582, -0.243337, -0.235558, -0.221044, -0.207487, -0.191713, -0.166454, -0.145928, -0.129124, -0.107959, -0.096580, -0.080601, -0.062447, -0.048462, -0.034394, -0.014101, 0.003512, 0.020831, 0.029779, 0.047272, 0.063348, 0.073814, 0.091818, 0.106357, 0.108068, 0.117664
#*# 	  -0.276084, -0.271541, -0.271841, -0.253047, -0.237975, -0.229646, -0.210027, -0.203750, -0.193088, -0.169801, -0.148586, -0.128992, -0.104714, -0.089649, -0.078514, -0.060498, -0.043369, -0.031728, -0.011553, 0.003607, 0.021271, 0.044749, 0.055240, 0.066598, 0.082393, 0.095463, 0.110363, 0.127553, 0.131572, 0.134673
#*# 	  -0.264881, -0.253855, -0.253380, -0.235698, -0.221242, -0.206414, -0.196119, -0.181940, -0.168647, -0.153154, -0.127241, -0.105799, -0.086876, -0.071466, -0.056862, -0.041414, -0.023085, -0.008447, 0.006564, 0.025248, 0.044504, 0.064137, 0.077484, 0.090698, 0.104698, 0.117916, 0.131046, 0.146615, 0.152747, 0.157727
#*# 	  -0.243150, -0.238421, -0.235620, -0.218017, -0.201382, -0.191195, -0.175711, -0.165002, -0.151962, -0.131081, -0.108534, -0.086931, -0.068318, -0.051318, -0.041924, -0.022423, -0.004320, 0.013644, 0.027688, 0.044600, 0.071044, 0.085265, 0.097063, 0.116188, 0.127890, 0.137777, 0.156662, 0.168010, 0.171579, 0.186346
#*# 	  -0.222948, -0.219607, -0.209480, -0.197234, -0.181180, -0.169080, -0.155843, -0.142721, -0.128316, -0.110093, -0.086183, -0.065814, -0.048194, -0.033500, -0.019652, -0.001026, 0.013440, 0.030735, 0.050520, 0.066438, 0.088443, 0.108453, 0.122201, 0.135994, 0.151449, 0.163152, 0.176749, 0.189652, 0.197342, 0.205737
#*# 	  -0.202055, -0.198791, -0.187863, -0.176875, -0.162903, -0.149918, -0.133291, -0.123552, -0.109044, -0.087184, -0.067135, -0.045375, -0.026191, -0.011829, 0.001218, 0.019871, 0.036667, 0.050444, 0.070469, 0.086363, 0.106991, 0.128034, 0.141964, 0.156091, 0.171683, 0.184008, 0.198162, 0.209643, 0.215266, 0.227438
#*# 	  -0.180998, -0.178633, -0.166612, -0.156322, -0.143330, -0.125664, -0.115097, -0.102713, -0.086407, -0.067147, -0.043430, -0.020534, -0.005177, 0.009370, 0.023883, 0.041438, 0.059632, 0.073880, 0.088958, 0.107032, 0.127165, 0.147763, 0.163829, 0.175572, 0.189405, 0.203863, 0.216799, 0.230263, 0.239079, 0.247565
#*# 	  -0.158788, -0.153529, -0.143144, -0.134273, -0.117133, -0.102915, -0.089875, -0.079444, -0.064023, -0.043106, -0.019957, 0.000086, 0.018366, 0.034707, 0.049089, 0.066594, 0.082963, 0.096439, 0.111132, 0.129600, 0.147825, 0.169469, 0.185308, 0.196541, 0.207603, 0.222765, 0.238238, 0.252330, 0.260819, 0.268161
#*# 	  -0.136166, -0.132605, -0.121148, -0.108914, -0.094366, -0.078421, -0.066345, -0.054732, -0.038242, -0.021139, 0.001068, 0.022376, 0.040882, 0.056141, 0.073112, 0.090785, 0.105846, 0.119658, 0.134403, 0.149428, 0.169869, 0.189266, 0.205568, 0.216707, 0.229520, 0.242848, 0.259366, 0.271856, 0.281041, 0.291114
#*# 	  -0.112389, -0.108068, -0.098296, -0.083823, -0.069569, -0.053426, -0.041622, -0.028889, -0.011049, 0.003751, 0.025237, 0.048459, 0.066284, 0.083687, 0.098995, 0.115609, 0.130822, 0.144105, 0.159512, 0.176031, 0.195691, 0.213550, 0.230451, 0.241712, 0.255359, 0.266979, 0.282839, 0.296181, 0.304389, 0.315434
#*# 	  -0.089775, -0.084570, -0.072165, -0.058702, -0.044735, -0.029744, -0.015751, -0.004915, 0.013628, 0.028636, 0.051169, 0.072399, 0.091225, 0.108951, 0.123312, 0.140879, 0.158844, 0.170841, 0.183532, 0.201906, 0.223131, 0.241026, 0.254269, 0.267335, 0.279935, 0.293580, 0.307505, 0.320102, 0.328452, 0.337365
#*# 	  -0.062254, -0.056288, -0.046293, -0.032998, -0.018149, -0.003808, 0.010057, 0.021317, 0.037403, 0.054575, 0.075988, 0.098576, 0.117585, 0.136707, 0.151221, 0.168497, 0.184533, 0.196670, 0.209313, 0.227213, 0.249183, 0.267425, 0.281341, 0.292571, 0.306139, 0.318800, 0.332419, 0.344130, 0.353559, 0.361959
#*# 	  -0.033103, -0.026904, -0.017700, -0.004984, 0.009782, 0.024853, 0.038513, 0.048764, 0.064647, 0.082079, 0.103565, 0.123842, 0.143516, 0.163979, 0.177796, 0.194682, 0.211924, 0.222809, 0.236372, 0.252725, 0.274676, 0.292639, 0.306842, 0.316375, 0.330440, 0.343419, 0.357487, 0.369250, 0.379033, 0.388375
#*# 	  -0.003708, 0.005124, 0.012353, 0.023856, 0.040002, 0.055159, 0.068317, 0.077989, 0.094680, 0.111017, 0.132705, 0.153443, 0.170329, 0.190294, 0.205124, 0.222187, 0.239017, 0.249877, 0.264543, 0.280924, 0.299870, 0.317864, 0.332521, 0.341495, 0.356068, 0.368031, 0.382768, 0.395456, 0.405667, 0.416299
#*# 	  0.022871, 0.030649, 0.039372, 0.050713, 0.068445, 0.083460, 0.096329, 0.106670, 0.122553, 0.139565, 0.160819, 0.180011, 0.196243, 0.214691, 0.229538, 0.247912, 0.264967, 0.276008, 0.289888, 0.305457, 0.325252, 0.341753, 0.356109, 0.367013, 0.380510, 0.394058, 0.408236, 0.422385, 0.433351, 0.443934
#*# 	  0.048034, 0.053920, 0.064933, 0.076393, 0.093172, 0.109742, 0.123519, 0.134586, 0.148927, 0.166949, 0.187390, 0.205582, 0.222848, 0.239174, 0.253827, 0.271654, 0.289324, 0.302636, 0.316013, 0.332113, 0.350464, 0.367245, 0.383089, 0.392974, 0.407285, 0.419866, 0.435599, 0.448900, 0.458233, 0.469992
#*# 	  0.071582, 0.078429, 0.089616, 0.101858, 0.119897, 0.136343, 0.148231, 0.160421, 0.174869, 0.192126, 0.212590, 0.232572, 0.248615, 0.265048, 0.278571, 0.295463, 0.312833, 0.326586, 0.343279, 0.359905, 0.377120, 0.394882, 0.410864, 0.420126, 0.433346, 0.447171, 0.463090, 0.476086, 0.486194, 0.496091
#*# 	  0.097910, 0.104154, 0.115086, 0.128787, 0.147583, 0.163674, 0.174507, 0.186094, 0.199491, 0.217502, 0.239524, 0.258042, 0.275107, 0.290785, 0.304836, 0.320593, 0.338115, 0.353046, 0.367981, 0.386127, 0.405557, 0.422867, 0.438546, 0.447484, 0.460391, 0.473803, 0.491025, 0.505060, 0.514897, 0.523619
#*# 	  0.125188, 0.131627, 0.143814, 0.157374, 0.177598, 0.191404, 0.201811, 0.212777, 0.226965, 0.244375, 0.265731, 0.285610, 0.302902, 0.318692, 0.331542, 0.349433, 0.366804, 0.380233, 0.395603, 0.413585, 0.432998, 0.450468, 0.467078, 0.476506, 0.488838, 0.503258, 0.520422, 0.536296, 0.547050, 0.553629
#*# 	  0.147072, 0.155651, 0.168790, 0.182771, 0.201593, 0.217441, 0.227306, 0.237273, 0.252353, 0.268122, 0.289803, 0.308584, 0.327288, 0.344867, 0.355433, 0.371362, 0.387949, 0.403669, 0.417954, 0.437756, 0.458159, 0.474712, 0.491027, 0.501970, 0.515217, 0.529675, 0.549961, 0.566591, 0.578014, 0.581213
#*# x_count = 30
#*# y_count = 30
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 230.0
#*# min_y = 20.0
#*# max_y = 230.0
#*#
#*# [scanner]
#*# mode = touch
#*# scanner_touch_threshold = 2750
#*# scanner_touch_speed = 3
#*#
#*# [scanner model default]
#*# model_coef = 1.4789147284442974,
#*# 	  1.813275209695586,
#*# 	  0.7534345128840025,
#*# 	  0.2891013780952739,
#*# 	  0.4271945076258194,
#*# 	  0.6304350967121154,
#*# 	  -0.3098419340561486,
#*# 	  -0.6785766005513046,
#*# 	  0.29876796813018325,
#*# 	  0.3963404227318263
#*# model_domain = 3.195396785078323e-07,3.319861915938487e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 32.794640
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.0.0
